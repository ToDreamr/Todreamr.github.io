<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nio on 春江花朝秋月夜</title>
    <link>/tags/nio/</link>
    <description>Recent content in nio on 春江花朝秋月夜</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© 2024 春江花朝秋月夜</copyright>
    <lastBuildDate>Wed, 06 Mar 2024 21:21:06 +0800</lastBuildDate><atom:link href="/tags/nio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用主从模式搭建一个Socket网络通信模型</title>
      <link>/entire-note/netty/</link>
      <pubDate>Wed, 06 Mar 2024 21:21:06 +0800</pubDate>
      
      <guid>/entire-note/netty/</guid>
      <description>通过NIO非阻塞式模型我们可以搭建一个Reactor-SubReactor-Handler的消息服务器 #netty的三大基本组件是：buffer，channel，selector
目的：
主要目的是利用Selector选择器实现IO多路复用
先来编写一下客户端，简单起见，只需要建立一个SocketChannel获取管道流传输数据
/** * @author 春江花朝秋月夜 */ public class ClientReactor { public static void main(String[] args) { // 创建一个新的SocketChannel，一会通过通道进行通信 try (SocketChannel channel =SocketChannel.open(newInetSocketAddress(&amp;#34;localhost&amp;#34;, 9000)); Scanner scanner = new Scanner(System.</description>
      
    </item>
    
  </channel>
</rss>
