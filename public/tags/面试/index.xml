<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on 春江花朝秋月夜</title>
    <link>//localhost:1313/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on 春江花朝秋月夜</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© 2024 春江花朝秋月夜</copyright>
    <lastBuildDate>Tue, 15 Oct 2024 18:23:23 +0800</lastBuildDate><atom:link href="//localhost:1313/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面试经历</title>
      <link>//localhost:1313/%E7%AC%94%E8%AE%B0/%E5%AE%9E%E9%99%85%E9%9D%A2%E8%AF%95%E8%A2%AB%E9%97%AE%E5%88%B0%E7%9A%84/</link>
      <pubDate>Tue, 15 Oct 2024 18:23:23 +0800</pubDate>
      
      <guid>//localhost:1313/%E7%AC%94%E8%AE%B0/%E5%AE%9E%E9%99%85%E9%9D%A2%E8%AF%95%E8%A2%AB%E9%97%AE%E5%88%B0%E7%9A%84/</guid>
      <description>数字马力 #说出自己实习经历中负责的最出彩的项目并介绍情况
八股文：
List使用for循环遍历增加或删除元素是否可行?
不可以，回抛出(ConcurrentModificationException)
原因：remove和add操作会导致modCount和迭代器中的expectedModCount不一致。
解释：涉及到fail-fast机制，也就是一旦检测到可能发生错误，就立马抛出异常，程序不继续往下执行，在Java中对集合的操作经常涉及到fail-fast机制， 当多个线程对同一个集合的内容进行操作时，就可能会产生fail-fast事件
解决办法：普通for循环、使用Iterator进行元素删除、使用Stream的filter、使用fail-safe的类等。
数组转成集合：
//1: List list = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;)) //2: Integer [] myArray = { 1, 2, 3 }; List myList = Arrays.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="//localhost:1313/%E7%AC%94%E8%AE%B0/%E5%AE%9E%E9%99%85%E9%9D%A2%E8%AF%95%E8%A2%AB%E9%97%AE%E5%88%B0%E7%9A%84/featured.jpg" />
    </item>
    
  </channel>
</rss>
